{
  "type": "Program",
  "body": [
    {
      "type": "PackageDeclaration",
      "value": "acsse.csc2a.file"
    },
    {
      "type": "ImportDeclaration",
      "value": "java.util.regex.Matcher"
    },
    {
      "type": "ImportDeclaration",
      "value": "java.util.regex.Pattern"
    },
    {
      "type": "ImportDeclaration",
      "value": "acsse.csc2a.model.Ship"
    },
    {
      "type": "ImportDeclaration",
      "value": "java.io.File"
    },
    {
      "type": "ImportDeclaration",
      "value": "java.io.FileNotFoundException"
    },
    {
      "type": "ImportDeclaration",
      "value": "java.util.Scanner"
    },
    {
      "type": "ClassDeclaration",
      "name": "FileHandler",
      "body": [
        {
          "type": "VariableDeclaration",
          "kind": "typed",
          "dataType": "Ship[]",
          "declarations": [
            {
              "name": "arrShip",
              "value": null
            }
          ],
          "modifiers": [
            "private"
          ]
        },
        {
          "type": "MethodDeclaration",
          "modifiers": [
            "public"
          ],
          "returnType": "Ship[]",
          "name": "readFile",
          "params": [
            {
              "type": "String",
              "name": "Filename"
            }
          ],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": "File textfile = new File ( Filename"
              },
              {
                "type": "ExpressionStatement",
                "expression": "( Scanner textin = new Scanner ( textfile"
              },
              {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "VariableDeclaration",
                    "kind": "typed",
                    "dataType": "int",
                    "declarations": [
                      {
                        "name": "n",
                        "value": "0"
                      }
                    ],
                    "modifiers": []
                  },
                  {
                    "type": "WhileStatement",
                    "test": {
                      "type": "Condition",
                      "tokens": [
                        "textin",
                        ".",
                        "hasNext",
                        "("
                      ]
                    },
                    "body": null
                  },
                  {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": "String line = textin . nextLine ("
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": "ShipPattern = Pattern . compile ( \"(^[SH]\\\\d{4})[a-zA-Z]\""
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": "shipMatcher = ShipPattern . matcher ( line"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": "( shipMatcher . matches ("
                      },
                      {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "SystemCall",
                            "value": ".out.println(line+\"matches\")"
                          }
                        ]
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": "else { n = n + 1"
                      },
                      {
                        "type": "SystemCall",
                        "value": ".out.println(\"hh\"+n)"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "ExpressionStatement",
          "expression": "catch ( FileNotFoundException ex"
        },
        {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ExpressionStatement",
              "expression": "ex . printStackTrace ("
            },
            {
              "type": "VariableDeclaration",
              "kind": "typed",
              "dataType": "Ship[]",
              "declarations": [
                {
                  "name": "aryShip",
                  "value": "null"
                }
              ],
              "modifiers": []
            },
            {
              "type": "ReturnStatement",
              "value": "aryShip"
            }
          ]
        }
      ]
    }
  ]
}